{"version":3,"sources":["../../webpack/universalModuleDefinition","../../webpack/bootstrap","services/Utilities.js","services/PhysicalKeyboard.js","components/Keyboard.js","services/KeyboardLayout.js","index.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Utilities","getOptions","getCaretPosition","dispatch","this","bindMethods","myClass","instance","getOwnPropertyNames","myMethod","button","buttonTypeClass","includes","buttonWithoutBraces","replace","buttonNormalized","display","mergeDisplay","assign","getDefaultDiplay","input","caretPos","moveCaret","options","output","length","removeAt","addStringAt","tabCharOnTab","newLineOnEnter","Number","isInteger","minus","newCaretPos","updateCaretPosAction","caretPosition","debug","console","log","keyboardDOMClass","source","string","position","slice","join","isMaxLengthReached","updateCaretPos","emojiMatchedReg","substring","match","substr","inputObj","updatedInput","maxLength","currentInput","inputName","condition","maxLengthReached","Boolean","navigator","maxTouchPoints","PointerEvent","toLowerCase","trim","split","reduce","word","toUpperCase","PhysicalKeyboard","event","buttonPressed","getSimpleKeyboardLayoutKey","buttonDOM","getButtonElement","style","backgroundColor","physicalKeyboardHighlightBgColor","color","physicalKeyboardHighlightTextColor","removeAttribute","code","SimpleKeyboard","params","keyboardDOM","document","querySelector","HTMLDivElement","className","warn","Error","initCallback","baseDOMClasses","keyboardClasses","filter","DOMClass","handleParams","utilities","layoutName","theme","preventMouseDownDefault","keyboardPluginClasses","buttonElements","currentInstanceName","camelCase","allKeyboardInstances","keyboardInstanceNames","keys","isFirstKeyboardInstance","physicalKeyboard","render","loadModules","onKeyPress","getUpdatedInput","inputPattern","inputPatternIsValid","handleMaxLength","syncInstanceInputs","onChange","onChangeAll","e","preventDefault","stopMouseDownPropagation","stopPropagation","target","classList","add","activeButtonClass","isMouseHold","holdInteractionTimeout","clearTimeout","holdTimeout","disableButtonHold","setTimeout","handleButtonHold","recurseButtons","buttonElement","remove","onKeyReleased","handleButtonClicked","replaceInput","onSetOptions","innerHTML","callback","forEach","buttons","classNameItem","buttonTheme","classNameFound","map","class","buttonThemeArray","push","Array","isArray","index","filteredButtonArray","item","splice","buttonArr","inputVal","inputPatternRaw","RegExp","didInputMatch","test","addEventListener","handleKeyUp","handleKeyDown","handleMouseUp","handleTouchEnd","caretEventHandler","physicalKeyboardHighlight","handleHighlightKeyUp","handleHighlightKeyDown","targetTagName","tagName","disableCaretPositioning","selectionStart","fn","buttonName","removeEventListener","onpointerup","ontouchend","ontouchcancel","onmouseup","deleteButton","onpointerdown","onpointercancel","ontouchstart","onclick","onmousedown","clear","initialized","buttonClasses","themeObj","themeObjClasses","buttonAttributes","attrObj","attribute","processAutoTouchEvents","disableContextualWindow","oncontextmenu","contains","autoUseTouchEvents","useTouchEvents","setEventListeners","onInit","isTouchDevice","onTouchDeviceDetected","beforeFirstRender","pointerEventsSupported","useMouseEvents","beforeRender","onRender","onModulesLoaded","KeyboardModule","keyboardModule","constructor","classStr","init","prop","rowDOM","rowIndex","containerStartIndexes","containerEndIndexes","rowDOMArray","from","children","removedElements","startIndex","arrIndex","endIndex","updated_startIndex","updated_endIndex","containerDOM","createElement","containerUID","setAttribute","containedElements","element","appendChild","layoutClass","layout","default","shift","useTouchEventsClass","disableRowButtonContainers","getKeyboardClassString","row","rIndex","rowArray","bIndex","buttonHasContainerStart","buttonHasContainerEnd","fctBtnClass","getButtonClass","buttonDisplayName","getButtonDisplayName","buttonType","useButtonTag","getButtonThemeClasses","setDOMButtonAttributes","handleButtonMouseDown","handleButtonMouseUp","buttonUID","buttonSpanDOM","parseRowDOMContainers","handleKeyboardContainerMouseDown","keyboard","Keyboard","bundleURL","getBundleURLCached","getBundleURL","err","matches","stack","getBaseURL","url","bundle","require","updateLink","link","newLink","cloneNode","onload","href","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","links","querySelectorAll","OVERLAY_ID","OldModule","Module","moduleName","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","JSON","parse","type","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","overlay","createErrorOverlay","body","getElementById","stackTrace","innerText","getParents","parents","k","dep","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"demoKebord.e31bb0bc.js","sourceRoot":"..","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SimpleKeyboard\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SimpleKeyboard\"] = factory();\n\telse\n\t\troot[\"SimpleKeyboard\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Utility Service\n */\nclass Utilities {\n  /**\n   * Creates an instance of the Utility service\n   */\n  constructor({ getOptions, getCaretPosition, dispatch }) {\n    this.getOptions = getOptions;\n    this.getCaretPosition = getCaretPosition;\n    this.dispatch = dispatch;\n\n    /**\n     * Bindings\n     */\n    Utilities.bindMethods(Utilities, this);\n  }\n\n  /**\n   * Adds default classes to a given button\n   *\n   * @param  {string} button The button's layout name\n   * @return {string} The classes to be added to the button\n   */\n  getButtonClass(button) {\n    const buttonTypeClass =\n      button.includes(\"{\") && button.includes(\"}\") && button !== \"{//}\"\n        ? \"functionBtn\"\n        : \"standardBtn\";\n    const buttonWithoutBraces = button.replace(\"{\", \"\").replace(\"}\", \"\");\n    let buttonNormalized = \"\";\n\n    if (buttonTypeClass !== \"standardBtn\")\n      buttonNormalized = ` hg-button-${buttonWithoutBraces}`;\n\n    return `hg-${buttonTypeClass}${buttonNormalized}`;\n  }\n\n  /**\n   * Default button display labels\n   */\n  getDefaultDiplay() {\n    return {\n      \"{bksp}\": \"backspace\",\n      \"{backspace}\": \"backspace\",\n      \"{enter}\": \"< enter\",\n      \"{shift}\": \"shift\",\n      \"{shiftleft}\": \"shift\",\n      \"{shiftright}\": \"shift\",\n      \"{alt}\": \"alt\",\n      \"{s}\": \"shift\",\n      \"{tab}\": \"tab\",\n      \"{lock}\": \"caps\",\n      \"{capslock}\": \"caps\",\n      \"{accept}\": \"Submit\",\n      \"{space}\": \" \",\n      \"{//}\": \" \",\n      \"{esc}\": \"esc\",\n      \"{escape}\": \"esc\",\n      \"{f1}\": \"f1\",\n      \"{f2}\": \"f2\",\n      \"{f3}\": \"f3\",\n      \"{f4}\": \"f4\",\n      \"{f5}\": \"f5\",\n      \"{f6}\": \"f6\",\n      \"{f7}\": \"f7\",\n      \"{f8}\": \"f8\",\n      \"{f9}\": \"f9\",\n      \"{f10}\": \"f10\",\n      \"{f11}\": \"f11\",\n      \"{f12}\": \"f12\",\n      \"{numpaddivide}\": \"/\",\n      \"{numlock}\": \"lock\",\n      \"{arrowup}\": \"↑\",\n      \"{arrowleft}\": \"←\",\n      \"{arrowdown}\": \"↓\",\n      \"{arrowright}\": \"→\",\n      \"{prtscr}\": \"print\",\n      \"{scrolllock}\": \"scroll\",\n      \"{pause}\": \"pause\",\n      \"{insert}\": \"ins\",\n      \"{home}\": \"home\",\n      \"{pageup}\": \"up\",\n      \"{delete}\": \"del\",\n      \"{end}\": \"end\",\n      \"{pagedown}\": \"down\",\n      \"{numpadmultiply}\": \"*\",\n      \"{numpadsubtract}\": \"-\",\n      \"{numpadadd}\": \"+\",\n      \"{numpadenter}\": \"enter\",\n      \"{period}\": \".\",\n      \"{numpaddecimal}\": \".\",\n      \"{numpad0}\": \"0\",\n      \"{numpad1}\": \"1\",\n      \"{numpad2}\": \"2\",\n      \"{numpad3}\": \"3\",\n      \"{numpad4}\": \"4\",\n      \"{numpad5}\": \"5\",\n      \"{numpad6}\": \"6\",\n      \"{numpad7}\": \"7\",\n      \"{numpad8}\": \"8\",\n      \"{numpad9}\": \"9\"\n    };\n  }\n  /**\n   * Returns the display (label) name for a given button\n   *\n   * @param  {string} button The button's layout name\n   * @param  {object} display The provided display option\n   * @param  {boolean} mergeDisplay Whether the provided param value should be merged with the default one.\n   */\n  getButtonDisplayName(button, display, mergeDisplay) {\n    if (mergeDisplay) {\n      display = Object.assign({}, this.getDefaultDiplay(), display);\n    } else {\n      display = display || this.getDefaultDiplay();\n    }\n\n    return display[button] || button;\n  }\n\n  /**\n   * Returns the updated input resulting from clicking a given button\n   *\n   * @param  {string} button The button's layout name\n   * @param  {string} input The input string\n   * @param  {number} caretPos The cursor's current position\n   * @param  {boolean} moveCaret Whether to update simple-keyboard's cursor\n   */\n  getUpdatedInput(button, input, caretPos, moveCaret) {\n    const options = this.getOptions();\n    let output = input;\n\n    if (\n      (button === \"{bksp}\" || button === \"{backspace}\") &&\n      output.length > 0\n    ) {\n      output = this.removeAt(output, caretPos, moveCaret);\n    } else if (button === \"{space}\")\n      output = this.addStringAt(output, \" \", caretPos, moveCaret);\n    else if (\n      button === \"{tab}\" &&\n      !(\n        typeof options.tabCharOnTab === \"boolean\" &&\n        options.tabCharOnTab === false\n      )\n    ) {\n      output = this.addStringAt(output, \"\\t\", caretPos, moveCaret);\n    } else if (\n      (button === \"{enter}\" || button === \"{numpadenter}\") &&\n      options.newLineOnEnter\n    )\n      output = this.addStringAt(output, \"\\n\", caretPos, moveCaret);\n    else if (\n      button.includes(\"numpad\") &&\n      Number.isInteger(Number(button[button.length - 2]))\n    ) {\n      output = this.addStringAt(\n        output,\n        button[button.length - 2],\n        caretPos,\n        moveCaret\n      );\n    } else if (button === \"{numpaddivide}\")\n      output = this.addStringAt(output, \"/\", caretPos, moveCaret);\n    else if (button === \"{numpadmultiply}\")\n      output = this.addStringAt(output, \"*\", caretPos, moveCaret);\n    else if (button === \"{numpadsubtract}\")\n      output = this.addStringAt(output, \"-\", caretPos, moveCaret);\n    else if (button === \"{numpadadd}\")\n      output = this.addStringAt(output, \"+\", caretPos, moveCaret);\n    else if (button === \"{numpaddecimal}\")\n      output = this.addStringAt(output, \".\", caretPos, moveCaret);\n    else if (button === \"{\" || button === \"}\")\n      output = this.addStringAt(output, button, caretPos, moveCaret);\n    else if (!button.includes(\"{\") && !button.includes(\"}\"))\n      output = this.addStringAt(output, button, caretPos, moveCaret);\n\n    return output;\n  }\n\n  /**\n   * Moves the cursor position by a given amount\n   *\n   * @param  {number} length Represents by how many characters the input should be moved\n   * @param  {boolean} minus Whether the cursor should be moved to the left or not.\n   */\n  updateCaretPos(length, minus) {\n    const newCaretPos = this.updateCaretPosAction(length, minus);\n\n    this.dispatch(instance => {\n      instance.caretPosition = newCaretPos;\n    });\n  }\n\n  /**\n   * Action method of updateCaretPos\n   *\n   * @param  {number} length Represents by how many characters the input should be moved\n   * @param  {boolean} minus Whether the cursor should be moved to the left or not.\n   */\n  updateCaretPosAction(length, minus) {\n    const options = this.getOptions();\n    let caretPosition = this.getCaretPosition();\n\n    if (minus) {\n      if (caretPosition > 0) caretPosition = caretPosition - length;\n    } else {\n      caretPosition = caretPosition + length;\n    }\n\n    if (options.debug) {\n      console.log(\"Caret at:\", caretPosition, `(${this.keyboardDOMClass})`);\n    }\n\n    return caretPosition;\n  }\n\n  /**\n   * Adds a string to the input at a given position\n   *\n   * @param  {string} source The source input\n   * @param  {string} string The string to add\n   * @param  {number} position The (cursor) position where the string should be added\n   * @param  {boolean} moveCaret Whether to update simple-keyboard's cursor\n   */\n  addStringAt(source, string, position, moveCaret) {\n    let output;\n\n    if (!position && position !== 0) {\n      output = source + string;\n    } else {\n      output = [source.slice(0, position), string, source.slice(position)].join(\n        \"\"\n      );\n\n      /**\n       * Avoid caret position change when maxLength is set\n       */\n      if (!this.isMaxLengthReached()) {\n        if (moveCaret) this.updateCaretPos(string.length);\n      }\n    }\n\n    return output;\n  }\n\n  /**\n   * Removes an amount of characters at a given position\n   *\n   * @param  {string} source The source input\n   * @param  {number} position The (cursor) position from where the characters should be removed\n   * @param  {boolean} moveCaret Whether to update simple-keyboard's cursor\n   */\n  removeAt(source, position, moveCaret) {\n    const caretPosition = this.getCaretPosition();\n\n    if (caretPosition === 0) {\n      return source;\n    }\n\n    let output;\n    let prevTwoChars;\n    let emojiMatched;\n    const emojiMatchedReg = /([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])/g;\n\n    /**\n     * Emojis are made out of two characters, so we must take a custom approach to trim them.\n     * For more info: https://mathiasbynens.be/notes/javascript-unicode\n     */\n    if (position && position >= 0) {\n      prevTwoChars = source.substring(position - 2, position);\n      emojiMatched = prevTwoChars.match(emojiMatchedReg);\n\n      if (emojiMatched) {\n        output = source.substr(0, position - 2) + source.substr(position);\n        if (moveCaret) this.updateCaretPos(2, true);\n      } else {\n        output = source.substr(0, position - 1) + source.substr(position);\n        if (moveCaret) this.updateCaretPos(1, true);\n      }\n    } else {\n      prevTwoChars = source.slice(-2);\n      emojiMatched = prevTwoChars.match(emojiMatchedReg);\n\n      if (emojiMatched) {\n        output = source.slice(0, -2);\n        if (moveCaret) this.updateCaretPos(2, true);\n      } else {\n        output = source.slice(0, -1);\n        if (moveCaret) this.updateCaretPos(1, true);\n      }\n    }\n\n    return output;\n  }\n  /**\n   * Determines whether the maxLength has been reached. This function is called when the maxLength option it set.\n   *\n   * @param  {object} inputObj\n   * @param  {string} updatedInput\n   */\n  handleMaxLength(inputObj, updatedInput) {\n    const options = this.getOptions();\n    const maxLength = options.maxLength;\n    const currentInput = inputObj[options.inputName];\n    const condition = updatedInput.length - 1 >= maxLength;\n\n    if (\n      /**\n       * If pressing this button won't add more characters\n       * We exit out of this limiter function\n       */\n      updatedInput.length <= currentInput.length\n    ) {\n      return false;\n    }\n\n    if (Number.isInteger(maxLength)) {\n      if (options.debug) {\n        console.log(\"maxLength (num) reached:\", condition);\n      }\n\n      if (condition) {\n        /**\n         * @type {boolean} Boolean value that shows whether maxLength has been reached\n         */\n        this.maxLengthReached = true;\n        return true;\n      } else {\n        this.maxLengthReached = false;\n        return false;\n      }\n    }\n\n    if (typeof maxLength === \"object\") {\n      const condition = currentInput.length === maxLength[options.inputName];\n\n      if (options.debug) {\n        console.log(\"maxLength (obj) reached:\", condition);\n      }\n\n      if (condition) {\n        this.maxLengthReached = true;\n        return true;\n      } else {\n        this.maxLengthReached = false;\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Gets the current value of maxLengthReached\n   */\n  isMaxLengthReached() {\n    return Boolean(this.maxLengthReached);\n  }\n\n  /**\n   * Determines whether a touch device is being used\n   */\n  isTouchDevice() {\n    return \"ontouchstart\" in window || navigator.maxTouchPoints;\n  }\n\n  /**\n   * Determines whether pointer events are supported\n   */\n  pointerEventsSupported() {\n    return window.PointerEvent;\n  }\n\n  /**\n   * Bind all methods in a given class\n   */\n\n  static bindMethods(myClass, instance) {\n    // eslint-disable-next-line no-unused-vars\n    for (const myMethod of Object.getOwnPropertyNames(myClass.prototype)) {\n      const excludeMethod =\n        myMethod === \"constructor\" || myMethod === \"bindMethods\";\n      if (!excludeMethod) {\n        instance[myMethod] = instance[myMethod].bind(instance);\n      }\n    }\n  }\n\n  /**\n   * Transforms an arbitrary string to camelCase\n   *\n   * @param  {string} string The string to transform.\n   */\n  camelCase(string) {\n    if (!string) return false;\n\n    return string\n      .toLowerCase()\n      .trim()\n      .split(/[.\\-_\\s]/g)\n      .reduce((string, word) =>\n        word.length ? string + word[0].toUpperCase() + word.slice(1) : string\n      );\n  }\n}\n\nexport default Utilities;\n","import Utilities from \"../services/Utilities\";\n\n/**\n * Physical Keyboard Service\n */\nclass PhysicalKeyboard {\n  /**\n   * Creates an instance of the PhysicalKeyboard service\n   */\n  constructor({ dispatch, getOptions }) {\n    /**\n     * @type {object} A simple-keyboard instance\n     */\n    this.dispatch = dispatch;\n    this.getOptions = getOptions;\n\n    /**\n     * Bindings\n     */\n    Utilities.bindMethods(PhysicalKeyboard, this);\n  }\n\n  handleHighlightKeyDown(event) {\n    const options = this.getOptions();\n    const buttonPressed = this.getSimpleKeyboardLayoutKey(event);\n\n    this.dispatch(instance => {\n      const buttonDOM =\n        instance.getButtonElement(buttonPressed) ||\n        instance.getButtonElement(`{${buttonPressed}}`);\n\n      if (buttonDOM) {\n        buttonDOM.style.backgroundColor =\n          options.physicalKeyboardHighlightBgColor || \"#9ab4d0\";\n        buttonDOM.style.color =\n          options.physicalKeyboardHighlightTextColor || \"white\";\n      }\n    });\n  }\n\n  handleHighlightKeyUp(event) {\n    const buttonPressed = this.getSimpleKeyboardLayoutKey(event);\n\n    this.dispatch(instance => {\n      const buttonDOM =\n        instance.getButtonElement(buttonPressed) ||\n        instance.getButtonElement(`{${buttonPressed}}`);\n\n      if (buttonDOM && buttonDOM.removeAttribute) {\n        buttonDOM.removeAttribute(\"style\");\n      }\n    });\n  }\n\n  /**\n   * Transforms a KeyboardEvent's \"key.code\" string into a simple-keyboard layout format\n   * @param  {object} event The KeyboardEvent\n   */\n  getSimpleKeyboardLayoutKey(event) {\n    let output;\n\n    if (\n      event.code.includes(\"Numpad\") ||\n      event.code.includes(\"Shift\") ||\n      event.code.includes(\"Space\") ||\n      event.code.includes(\"Backspace\") ||\n      event.code.includes(\"Control\") ||\n      event.code.includes(\"Alt\") ||\n      event.code.includes(\"Meta\")\n    ) {\n      output = event.code;\n    } else {\n      output = event.key;\n    }\n\n    /**\n     * If button is not uppercase, casting to lowercase\n     */\n    if (\n      output !== output.toUpperCase() ||\n      (event.code[0] === \"F\" &&\n        Number.isInteger(Number(event.code[1])) &&\n        event.code.length <= 3)\n    ) {\n      output = output.toLowerCase();\n    }\n\n    return output;\n  }\n}\n\nexport default PhysicalKeyboard;\n","import \"./Keyboard.css\";\n\n// Services\nimport { getDefaultLayout } from \"../services/KeyboardLayout\";\nimport PhysicalKeyboard from \"../services/PhysicalKeyboard\";\nimport Utilities from \"../services/Utilities\";\n\n/**\n * Root class for simple-keyboard\n * This class:\n * - Parses the options\n * - Renders the rows and buttons\n * - Handles button functionality\n */\nclass SimpleKeyboard {\n  /**\n   * Creates an instance of SimpleKeyboard\n   * @param {Array} params If first parameter is a string, it is considered the container class. The second parameter is then considered the options object. If first parameter is an object, it is considered the options object.\n   */\n  constructor(...params) {\n    const { keyboardDOMClass, keyboardDOM, options = {} } = this.handleParams(\n      params\n    );\n\n    /**\n     * Initializing Utilities\n     */\n    this.utilities = new Utilities({\n      getOptions: this.getOptions,\n      getCaretPosition: this.getCaretPosition,\n      dispatch: this.dispatch\n    });\n\n    /**\n     * Caret position\n     */\n    this.caretPosition = null;\n\n    /**\n     * Processing options\n     */\n    this.keyboardDOM = keyboardDOM;\n\n    /**\n     * @type {object}\n     * @property {object} layout Modify the keyboard layout.\n     * @property {string} layoutName Specifies which layout should be used.\n     * @property {object} display Replaces variable buttons (such as {bksp}) with a human-friendly name (e.g.: “backspace”).\n     * @property {boolean} mergeDisplay By default, when you set the display property, you replace the default one. This setting merges them instead.\n     * @property {string} theme A prop to add your own css classes to the keyboard wrapper. You can add multiple classes separated by a space.\n     * @property {array} buttonTheme A prop to add your own css classes to one or several buttons.\n     * @property {array} buttonAttributes A prop to add your own attributes to one or several buttons.\n     * @property {boolean} debug Runs a console.log every time a key is pressed. Displays the buttons pressed and the current input.\n     * @property {boolean} newLineOnEnter Specifies whether clicking the “ENTER” button will input a newline (\\n) or not.\n     * @property {boolean} tabCharOnTab Specifies whether clicking the “TAB” button will input a tab character (\\t) or not.\n     * @property {string} inputName Allows you to use a single simple-keyboard instance for several inputs.\n     * @property {number} maxLength Restrains all of simple-keyboard inputs to a certain length. This should be used in addition to the input element’s maxlengthattribute.\n     * @property {object} maxLength Restrains simple-keyboard’s individual inputs to a certain length. This should be used in addition to the input element’s maxlengthattribute.\n     * @property {boolean} syncInstanceInputs When set to true, this option synchronizes the internal input of every simple-keyboard instance.\n     * @property {boolean} physicalKeyboardHighlight Enable highlighting of keys pressed on physical keyboard.\n     * @property {boolean} preventMouseDownDefault Calling preventDefault for the mousedown events keeps the focus on the input.\n     * @property {boolean} stopMouseDownPropagation Stops pointer down events on simple-keyboard buttons from bubbling to parent elements.\n     * @property {string} physicalKeyboardHighlightTextColor Define the text color that the physical keyboard highlighted key should have.\n     * @property {string} physicalKeyboardHighlightBgColor Define the background color that the physical keyboard highlighted key should have.\n     * @property {function(button: string):string} onKeyPress Executes the callback function on key press. Returns button layout name (i.e.: “{shift}”).\n     * @property {function(input: string):string} onChange Executes the callback function on input change. Returns the current input’s string.\n     * @property {function} onRender Executes the callback function every time simple-keyboard is rendered (e.g: when you change layouts).\n     * @property {function} onInit Executes the callback function once simple-keyboard is rendered for the first time (on initialization).\n     * @property {function(inputs: object):object} onChangeAll Executes the callback function on input change. Returns the input object with all defined inputs.\n     * @property {boolean} useButtonTag Render buttons as a button element instead of a div element.\n     * @property {boolean} disableCaretPositioning A prop to ensure characters are always be added/removed at the end of the string.\n     * @property {object} inputPattern Restrains input(s) change to the defined regular expression pattern.\n     * @property {boolean} useTouchEvents Instructs simple-keyboard to use touch events instead of click events.\n     * @property {boolean} autoUseTouchEvents Enable useTouchEvents automatically when touch device is detected.\n     * @property {boolean} useMouseEvents Opt out of PointerEvents handling, falling back to the prior mouse event logic.\n     * @property {function} destroy Clears keyboard listeners and DOM elements.\n     * @property {boolean} disableButtonHold Disable button hold action.\n     * @property {function} onKeyReleased Executes the callback function on key release.\n     * @property {array} modules Module classes to be loaded by simple-keyboard.\n     */\n    this.options = options;\n    this.options.layoutName = this.options.layoutName || \"default\";\n    this.options.theme = this.options.theme || \"hg-theme-default\";\n    this.options.inputName = this.options.inputName || \"default\";\n    this.options.preventMouseDownDefault =\n      this.options.preventMouseDownDefault || false;\n\n    /**\n     * @type {object} Classes identifying loaded plugins\n     */\n    this.keyboardPluginClasses = \"\";\n\n    /**\n     * Bindings\n     */\n    Utilities.bindMethods(SimpleKeyboard, this);\n\n    /**\n     * simple-keyboard uses a non-persistent internal input to keep track of the entered string (the variable `keyboard.input`).\n     * This removes any dependency to input DOM elements. You can type and directly display the value in a div element, for example.\n     * @example\n     * // To get entered input\n     * const input = keyboard.getInput();\n     *\n     * // To clear entered input.\n     * keyboard.clearInput();\n     *\n     * @type {object}\n     * @property {object} default Default SimpleKeyboard internal input.\n     * @property {object} myInputName Example input that can be set through `options.inputName:\"myInputName\"`.\n     */\n    this.input = {};\n    this.input[this.options.inputName] = \"\";\n\n    /**\n     * @type {string} DOM class of the keyboard wrapper, normally \"simple-keyboard\" by default.\n     */\n    this.keyboardDOMClass = keyboardDOMClass;\n\n    /**\n     * @type {object} Contains the DOM elements of every rendered button, the key being the button's layout name (e.g.: \"{enter}\").\n     */\n    this.buttonElements = {};\n\n    /**\n     * Simple-keyboard Instances\n     * This enables multiple simple-keyboard support with easier management\n     */\n    if (!window[\"SimpleKeyboardInstances\"])\n      window[\"SimpleKeyboardInstances\"] = {};\n\n    this.currentInstanceName = this.utilities.camelCase(this.keyboardDOMClass);\n    window[\"SimpleKeyboardInstances\"][this.currentInstanceName] = this;\n\n    /**\n     * Instance vars\n     */\n    this.allKeyboardInstances = window[\"SimpleKeyboardInstances\"];\n    this.keyboardInstanceNames = Object.keys(window[\"SimpleKeyboardInstances\"]);\n    this.isFirstKeyboardInstance =\n      this.keyboardInstanceNames[0] === this.currentInstanceName;\n\n    /**\n     * Physical Keyboard support\n     */\n    this.physicalKeyboard = new PhysicalKeyboard({\n      dispatch: this.dispatch,\n      getOptions: this.getOptions\n    });\n\n    /**\n     * Rendering keyboard\n     */\n    if (this.keyboardDOM) this.render();\n    else {\n      console.warn(`\".${keyboardDOMClass}\" was not found in the DOM.`);\n      throw new Error(\"KEYBOARD_DOM_ERROR\");\n    }\n\n    /**\n     * Modules\n     */\n    this.modules = {};\n    this.loadModules();\n  }\n\n  /**\n   * parseParams\n   */\n  handleParams = params => {\n    let keyboardDOMClass;\n    let keyboardDOM;\n    let options;\n\n    /**\n     * If first parameter is a string:\n     * Consider it as an element's class\n     */\n    if (typeof params[0] === \"string\") {\n      keyboardDOMClass = params[0].split(\".\").join(\"\");\n      keyboardDOM = document.querySelector(`.${keyboardDOMClass}`);\n      options = params[1];\n\n      /**\n       * If first parameter is an HTMLDivElement\n       * Consider it as the keyboard DOM element\n       */\n    } else if (params[0] instanceof HTMLDivElement) {\n      /**\n       * This element must have a class, otherwise throw\n       */\n      if (!params[0].className) {\n        console.warn(\"Any DOM element passed as parameter must have a class.\");\n        throw new Error(\"KEYBOARD_DOM_CLASS_ERROR\");\n      }\n\n      keyboardDOMClass = params[0].className.split(\" \")[0];\n      keyboardDOM = params[0];\n      options = params[1];\n\n      /**\n       * Otherwise, search for .simple-keyboard DOM element\n       */\n    } else {\n      keyboardDOMClass = \"simple-keyboard\";\n      keyboardDOM = document.querySelector(`.${keyboardDOMClass}`);\n      options = params[0];\n    }\n\n    return {\n      keyboardDOMClass,\n      keyboardDOM,\n      options\n    };\n  };\n\n  /**\n   * Getters\n   */\n  getOptions = () => this.options;\n  getCaretPosition = () => this.caretPosition;\n\n  /**\n   * Handles clicks made to keyboard buttons\n   * @param  {string} button The button's layout name.\n   */\n  handleButtonClicked(button) {\n    const debug = this.options.debug;\n\n    /**\n     * Ignoring placeholder buttons\n     */\n    if (button === \"{//}\") return false;\n\n    /**\n     * Calling onKeyPress\n     */\n    if (typeof this.options.onKeyPress === \"function\")\n      this.options.onKeyPress(button);\n\n    if (!this.input[this.options.inputName])\n      this.input[this.options.inputName] = \"\";\n\n    const updatedInput = this.utilities.getUpdatedInput(\n      button,\n      this.input[this.options.inputName],\n      this.caretPosition\n    );\n\n    if (\n      // If input will change as a result of this button press\n      this.input[this.options.inputName] !== updatedInput &&\n      // This pertains to the \"inputPattern\" option:\n      // If inputPattern isn't set\n      (!this.options.inputPattern ||\n        // Or, if it is set and if the pattern is valid - we proceed.\n        (this.options.inputPattern && this.inputPatternIsValid(updatedInput)))\n    ) {\n      /**\n       * If maxLength and handleMaxLength yield true, halting\n       */\n      if (\n        this.options.maxLength &&\n        this.utilities.handleMaxLength(this.input, updatedInput)\n      ) {\n        return false;\n      }\n\n      this.input[this.options.inputName] = this.utilities.getUpdatedInput(\n        button,\n        this.input[this.options.inputName],\n        this.caretPosition,\n        true\n      );\n\n      if (debug) console.log(\"Input changed:\", this.input);\n\n      /**\n       * Enforce syncInstanceInputs, if set\n       */\n      if (this.options.syncInstanceInputs) this.syncInstanceInputs();\n\n      /**\n       * Calling onChange\n       */\n      if (typeof this.options.onChange === \"function\")\n        this.options.onChange(this.input[this.options.inputName]);\n\n      /**\n       * Calling onChangeAll\n       */\n      if (typeof this.options.onChangeAll === \"function\")\n        this.options.onChangeAll(this.input);\n    }\n\n    if (debug) {\n      console.log(\"Key pressed:\", button);\n    }\n  }\n\n  /**\n   * Handles button mousedown\n   */\n  /* istanbul ignore next */\n  handleButtonMouseDown(button, e) {\n    /**\n     * Handle event options\n     */\n    if (this.options.preventMouseDownDefault) e.preventDefault();\n    if (this.options.stopMouseDownPropagation) e.stopPropagation();\n\n    /**\n     * Add active class\n     */\n    if (e) e.target.classList.add(this.activeButtonClass);\n\n    /**\n     * @type {boolean} Whether the mouse is being held onKeyPress\n     */\n    this.isMouseHold = true;\n\n    if (this.holdInteractionTimeout) clearTimeout(this.holdInteractionTimeout);\n\n    if (this.holdTimeout) clearTimeout(this.holdTimeout);\n\n    /**\n     * @type {object} Time to wait until a key hold is detected\n     */\n    if (!this.options.disableButtonHold) {\n      this.holdTimeout = setTimeout(() => {\n        if (\n          this.isMouseHold &&\n          ((!button.includes(\"{\") && !button.includes(\"}\")) ||\n            button === \"{delete}\" ||\n            button === \"{backspace}\" ||\n            button === \"{bksp}\" ||\n            button === \"{space}\" ||\n            button === \"{tab}\")\n        ) {\n          if (this.options.debug) console.log(\"Button held:\", button);\n\n          this.handleButtonHold(button, e);\n        }\n        clearTimeout(this.holdTimeout);\n      }, 500);\n    }\n  }\n\n  /**\n   * Handles button mouseup\n   */\n  handleButtonMouseUp(button) {\n    /**\n     * Remove active class\n     */\n    this.recurseButtons(buttonElement => {\n      buttonElement.classList.remove(this.activeButtonClass);\n    });\n\n    this.isMouseHold = false;\n    if (this.holdInteractionTimeout) clearTimeout(this.holdInteractionTimeout);\n\n    /**\n     * Calling onKeyReleased\n     */\n    if (button && typeof this.options.onKeyReleased === \"function\")\n      this.options.onKeyReleased(button);\n  }\n\n  /**\n   * Handles container mousedown\n   */\n  handleKeyboardContainerMouseDown(e) {\n    /**\n     * Handle event options\n     */\n    if (this.options.preventMouseDownDefault) e.preventDefault();\n  }\n\n  /**\n   * Handles button hold\n   */\n  /* istanbul ignore next */\n  handleButtonHold(button) {\n    if (this.holdInteractionTimeout) clearTimeout(this.holdInteractionTimeout);\n\n    /**\n     * @type {object} Timeout dictating the speed of key hold iterations\n     */\n    this.holdInteractionTimeout = setTimeout(() => {\n      if (this.isMouseHold) {\n        this.handleButtonClicked(button);\n        this.handleButtonHold(button);\n      } else {\n        clearTimeout(this.holdInteractionTimeout);\n      }\n    }, 100);\n  }\n\n  /**\n   * Send a command to all simple-keyboard instances (if you have several instances).\n   */\n  syncInstanceInputs() {\n    this.dispatch(instance => {\n      instance.replaceInput(this.input);\n      instance.caretPosition = this.caretPosition;\n    });\n  }\n\n  /**\n   * Clear the keyboard’s input.\n   * @param {string} [inputName] optional - the internal input to select\n   */\n  clearInput(inputName) {\n    inputName = inputName || this.options.inputName;\n    this.input[inputName] = \"\";\n\n    /**\n     * Reset caretPosition\n     */\n    this.caretPosition = 0;\n\n    /**\n     * Enforce syncInstanceInputs, if set\n     */\n    if (this.options.syncInstanceInputs) this.syncInstanceInputs();\n  }\n\n  /**\n   * Get the keyboard’s input (You can also get it from the onChange prop).\n   * @param  {string} [inputName] optional - the internal input to select\n   */\n  getInput(inputName) {\n    inputName = inputName || this.options.inputName;\n\n    /**\n     * Enforce syncInstanceInputs, if set\n     */\n    if (this.options.syncInstanceInputs) this.syncInstanceInputs();\n\n    return this.input[inputName];\n  }\n\n  /**\n   * Set the keyboard’s input.\n   * @param  {string} input the input value\n   * @param  {string} inputName optional - the internal input to select\n   */\n  setInput(input, inputName) {\n    inputName = inputName || this.options.inputName;\n    this.input[inputName] = input;\n\n    /**\n     * Enforce syncInstanceInputs, if set\n     */\n    if (this.options.syncInstanceInputs) this.syncInstanceInputs();\n  }\n\n  /**\n   * Replace the input object (`keyboard.input`)\n   * @param  {object} inputObj The input object\n   */\n  replaceInput(inputObj) {\n    this.input = inputObj;\n  }\n\n  /**\n   * Set new option or modify existing ones after initialization.\n   * @param  {object} options The options to set\n   */\n  setOptions(options) {\n    options = options || {};\n    this.options = Object.assign(this.options, options);\n\n    /**\n     * Some option changes require adjustments before re-render\n     */\n    this.onSetOptions(options);\n\n    /**\n     * Rendering\n     */\n    this.render();\n  }\n\n  /**\n   * Executing actions depending on changed options\n   * @param  {object} options The options to set\n   */\n  onSetOptions(options) {\n    if (options.inputName) {\n      /**\n       * inputName changed. This requires a caretPosition reset\n       */\n      if (this.options.debug) {\n        console.log(\"inputName changed. caretPosition reset.\");\n      }\n\n      this.caretPosition = null;\n    }\n  }\n\n  /**\n   * Remove all keyboard rows and reset keyboard values.\n   * Used internally between re-renders.\n   */\n  clear() {\n    this.keyboardDOM.innerHTML = \"\";\n    this.keyboardDOM.className = this.keyboardDOMClass;\n    this.buttonElements = {};\n  }\n\n  /**\n   * Send a command to all simple-keyboard instances at once (if you have multiple instances).\n   * @param  {function(instance: object, key: string)} callback Function to run on every instance\n   */\n  dispatch(callback) {\n    if (!window[\"SimpleKeyboardInstances\"]) {\n      console.warn(\n        `SimpleKeyboardInstances is not defined. Dispatch cannot be called.`\n      );\n      throw new Error(\"INSTANCES_VAR_ERROR\");\n    }\n\n    return Object.keys(window[\"SimpleKeyboardInstances\"]).forEach(key => {\n      callback(window[\"SimpleKeyboardInstances\"][key], key);\n    });\n  }\n\n  /**\n   * Adds/Modifies an entry to the `buttonTheme`. Basically a way to add a class to a button.\n   * @param  {string} buttons List of buttons to select (separated by a space).\n   * @param  {string} className Classes to give to the selected buttons (separated by space).\n   */\n  addButtonTheme(buttons, className) {\n    if (!className || !buttons) return false;\n\n    buttons.split(\" \").forEach(button => {\n      className.split(\" \").forEach(classNameItem => {\n        if (!this.options.buttonTheme) this.options.buttonTheme = [];\n\n        let classNameFound = false;\n\n        /**\n         * If class is already defined, we add button to class definition\n         */\n        this.options.buttonTheme.map(buttonTheme => {\n          if (buttonTheme.class.split(\" \").includes(classNameItem)) {\n            classNameFound = true;\n\n            const buttonThemeArray = buttonTheme.buttons.split(\" \");\n            if (!buttonThemeArray.includes(button)) {\n              classNameFound = true;\n              buttonThemeArray.push(button);\n              buttonTheme.buttons = buttonThemeArray.join(\" \");\n            }\n          }\n          return buttonTheme;\n        });\n\n        /**\n         * If class is not defined, we create a new entry\n         */\n        if (!classNameFound) {\n          this.options.buttonTheme.push({\n            class: classNameItem,\n            buttons: buttons\n          });\n        }\n      });\n    });\n\n    this.render();\n  }\n\n  /**\n   * Removes/Amends an entry to the `buttonTheme`. Basically a way to remove a class previously added to a button through buttonTheme or addButtonTheme.\n   * @param  {string} buttons List of buttons to select (separated by a space).\n   * @param  {string} className Classes to give to the selected buttons (separated by space).\n   */\n  removeButtonTheme(buttons, className) {\n    /**\n     * When called with empty parameters, remove all button themes\n     */\n    if (!buttons && !className) {\n      this.options.buttonTheme = [];\n      this.render();\n      return false;\n    }\n\n    /**\n     * If buttons are passed and buttonTheme has items\n     */\n    if (\n      buttons &&\n      Array.isArray(this.options.buttonTheme) &&\n      this.options.buttonTheme.length\n    ) {\n      const buttonArray = buttons.split(\" \");\n      buttonArray.forEach(button => {\n        this.options.buttonTheme.map((buttonTheme, index) => {\n          /**\n           * If className is set, we affect the buttons only for that class\n           * Otherwise, we afect all classes\n           */\n          if (\n            (className && className.includes(buttonTheme.class)) ||\n            !className\n          ) {\n            const filteredButtonArray = buttonTheme.buttons\n              .split(\" \")\n              .filter(item => item !== button);\n\n            /**\n             * If buttons left, return them, otherwise, remove button Theme\n             */\n            if (filteredButtonArray.length) {\n              buttonTheme.buttons = filteredButtonArray.join(\" \");\n            } else {\n              this.options.buttonTheme.splice(index, 1);\n              buttonTheme = null;\n            }\n          }\n\n          return buttonTheme;\n        });\n      });\n\n      this.render();\n    }\n  }\n\n  /**\n   * Get the DOM Element of a button. If there are several buttons with the same name, an array of the DOM Elements is returned.\n   * @param  {string} button The button layout name to select\n   */\n  getButtonElement(button) {\n    let output;\n\n    const buttonArr = this.buttonElements[button];\n    if (buttonArr) {\n      if (buttonArr.length > 1) {\n        output = buttonArr;\n      } else {\n        output = buttonArr[0];\n      }\n    }\n\n    return output;\n  }\n\n  /**\n   * This handles the \"inputPattern\" option\n   * by checking if the provided inputPattern passes\n   */\n  inputPatternIsValid(inputVal) {\n    const inputPatternRaw = this.options.inputPattern;\n    let inputPattern;\n\n    /**\n     * Check if input pattern is global or targeted to individual inputs\n     */\n    if (inputPatternRaw instanceof RegExp) {\n      inputPattern = inputPatternRaw;\n    } else {\n      inputPattern = inputPatternRaw[this.options.inputName];\n    }\n\n    if (inputPattern && inputVal) {\n      const didInputMatch = inputPattern.test(inputVal);\n\n      if (this.options.debug) {\n        console.log(\n          `inputPattern (\"${inputPattern}\"): ${\n            didInputMatch ? \"passed\" : \"did not pass!\"\n          }`\n        );\n      }\n\n      return didInputMatch;\n    } else {\n      /**\n       * inputPattern doesn't seem to be set for the current input, or input is empty. Pass.\n       */\n      return true;\n    }\n  }\n\n  /**\n   * Handles simple-keyboard event listeners\n   */\n  setEventListeners() {\n    /**\n     * Only first instance should set the event listeners\n     */\n    if (this.isFirstKeyboardInstance || !this.allKeyboardInstances) {\n      if (this.options.debug) {\n        console.log(`Caret handling started (${this.keyboardDOMClass})`);\n      }\n\n      /**\n       * Event Listeners\n       */\n      document.addEventListener(\"keyup\", this.handleKeyUp);\n      document.addEventListener(\"keydown\", this.handleKeyDown);\n      document.addEventListener(\"mouseup\", this.handleMouseUp);\n      document.addEventListener(\"touchend\", this.handleTouchEnd);\n    }\n  }\n\n  /**\n   * Event Handler: KeyUp\n   */\n  handleKeyUp(event) {\n    this.caretEventHandler(event);\n\n    if (this.options.physicalKeyboardHighlight) {\n      this.physicalKeyboard.handleHighlightKeyUp(event);\n    }\n  }\n\n  /**\n   * Event Handler: KeyDown\n   */\n  handleKeyDown(event) {\n    if (this.options.physicalKeyboardHighlight) {\n      this.physicalKeyboard.handleHighlightKeyDown(event);\n    }\n  }\n\n  /**\n   * Event Handler: MouseUp\n   */\n  handleMouseUp(event) {\n    this.caretEventHandler(event);\n  }\n\n  /**\n   * Event Handler: TouchEnd\n   */\n  handleTouchEnd(event) {\n    this.caretEventHandler(event);\n  }\n\n  /**\n   * Called by {@link setEventListeners} when an event that warrants a cursor position update is triggered\n   */\n  caretEventHandler(event) {\n    let targetTagName;\n    if (event.target.tagName) {\n      targetTagName = event.target.tagName.toLowerCase();\n    }\n\n    this.dispatch(instance => {\n      if (instance.isMouseHold) {\n        instance.isMouseHold = false;\n      }\n\n      if (\n        (targetTagName === \"textarea\" || targetTagName === \"input\") &&\n        !instance.options.disableCaretPositioning\n      ) {\n        /**\n         * Tracks current cursor position\n         * As keys are pressed, text will be added/removed at that position within the input.\n         */\n        instance.caretPosition = event.target.selectionStart;\n\n        if (instance.options.debug) {\n          console.log(\n            \"Caret at: \",\n            event.target.selectionStart,\n            event.target.tagName.toLowerCase(),\n            `(${instance.keyboardDOMClass})`\n          );\n        }\n      } else if (instance.options.disableCaretPositioning) {\n        /**\n         * If we toggled off disableCaretPositioning, we must ensure caretPosition doesn't persist once reactivated.\n         */\n        instance.caretPosition = null;\n      }\n    });\n  }\n\n  /**\n   * Execute an operation on each button\n   */\n  recurseButtons(fn) {\n    if (!fn) return false;\n\n    Object.keys(this.buttonElements).forEach(buttonName =>\n      this.buttonElements[buttonName].forEach(fn)\n    );\n  }\n\n  /**\n   * Destroy keyboard listeners and DOM elements\n   */\n  destroy() {\n    if (this.options.debug)\n      console.log(\n        `Destroying simple-keyboard instance: ${this.currentInstanceName}`\n      );\n\n    /**\n     * Remove document listeners\n     */\n    document.removeEventListener(\"keyup\", this.handleKeyUp);\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n    document.removeEventListener(\"mouseup\", this.handleMouseUp);\n    document.removeEventListener(\"touchend\", this.handleTouchEnd);\n    document.onpointerup = null;\n    document.ontouchend = null;\n    document.ontouchcancel = null;\n    document.onmouseup = null;\n\n    /**\n     * Remove buttons\n     */\n    let deleteButton = buttonElement => {\n      buttonElement.onpointerdown = null;\n      buttonElement.onpointerup = null;\n      buttonElement.onpointercancel = null;\n      buttonElement.ontouchstart = null;\n      buttonElement.ontouchend = null;\n      buttonElement.ontouchcancel = null;\n      buttonElement.onclick = null;\n      buttonElement.onmousedown = null;\n      buttonElement.onmouseup = null;\n\n      buttonElement.remove();\n      buttonElement = null;\n    };\n\n    this.recurseButtons(deleteButton);\n\n    this.recurseButtons = null;\n    deleteButton = null;\n\n    /**\n     * Remove wrapper events\n     */\n    this.keyboardDOM.onpointerdown = null;\n    this.keyboardDOM.ontouchstart = null;\n    this.keyboardDOM.onmousedown = null;\n\n    /**\n     * Clearing keyboard wrapper\n     */\n    this.clear();\n\n    /**\n     * Remove instance\n     */\n    window[\"SimpleKeyboardInstances\"][this.currentInstanceName] = null;\n    delete window[\"SimpleKeyboardInstances\"][this.currentInstanceName];\n\n    /**\n     * Reset initialized flag\n     */\n    this.initialized = false;\n  }\n\n  /**\n   * Process buttonTheme option\n   */\n  getButtonThemeClasses(button) {\n    const buttonTheme = this.options.buttonTheme;\n    let buttonClasses = [];\n\n    if (Array.isArray(buttonTheme)) {\n      buttonTheme.forEach(themeObj => {\n        if (\n          themeObj.class &&\n          typeof themeObj.class === \"string\" &&\n          themeObj.buttons &&\n          typeof themeObj.buttons === \"string\"\n        ) {\n          const themeObjClasses = themeObj.class.split(\" \");\n          const themeObjButtons = themeObj.buttons.split(\" \");\n\n          if (themeObjButtons.includes(button)) {\n            buttonClasses = [...buttonClasses, ...themeObjClasses];\n          }\n        } else {\n          console.warn(\n            `Incorrect \"buttonTheme\". Please check the documentation.`,\n            themeObj\n          );\n        }\n      });\n    }\n\n    return buttonClasses;\n  }\n\n  /**\n   * Process buttonAttributes option\n   */\n  setDOMButtonAttributes(button, callback) {\n    const buttonAttributes = this.options.buttonAttributes;\n\n    if (Array.isArray(buttonAttributes)) {\n      buttonAttributes.forEach(attrObj => {\n        if (\n          attrObj.attribute &&\n          typeof attrObj.attribute === \"string\" &&\n          attrObj.value &&\n          typeof attrObj.value === \"string\" &&\n          attrObj.buttons &&\n          typeof attrObj.buttons === \"string\"\n        ) {\n          const attrObjButtons = attrObj.buttons.split(\" \");\n\n          if (attrObjButtons.includes(button)) {\n            callback(attrObj.attribute, attrObj.value);\n          }\n        } else {\n          console.warn(\n            `Incorrect \"buttonAttributes\". Please check the documentation.`,\n            attrObj\n          );\n        }\n      });\n    }\n  }\n\n  onTouchDeviceDetected() {\n    /**\n     * Processing autoTouchEvents\n     */\n    this.processAutoTouchEvents();\n\n    /**\n     * Disabling contextual window on touch devices\n     */\n    this.disableContextualWindow();\n  }\n\n  /**\n   * Disabling contextual window for hg-button\n   */\n  /* istanbul ignore next */\n  disableContextualWindow() {\n    window.oncontextmenu = event => {\n      if (event.target.classList.contains(\"hg-button\")) {\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n      }\n    };\n  }\n\n  /**\n   * Process autoTouchEvents option\n   */\n  processAutoTouchEvents() {\n    if (this.options.autoUseTouchEvents) {\n      this.options.useTouchEvents = true;\n\n      if (this.options.debug) {\n        console.log(\n          `autoUseTouchEvents: Touch device detected, useTouchEvents enabled.`\n        );\n      }\n    }\n  }\n\n  /**\n   * Executes the callback function once simple-keyboard is rendered for the first time (on initialization).\n   */\n  onInit() {\n    if (this.options.debug) {\n      console.log(`${this.keyboardDOMClass} Initialized`);\n    }\n\n    /**\n     * setEventListeners\n     */\n    this.setEventListeners();\n\n    if (typeof this.options.onInit === \"function\") this.options.onInit();\n  }\n\n  /**\n   * Executes the callback function before a simple-keyboard render.\n   */\n  beforeFirstRender() {\n    /**\n     * Performing actions when touch device detected\n     */\n    if (this.utilities.isTouchDevice()) {\n      this.onTouchDeviceDetected();\n    }\n\n    if (typeof this.options.beforeFirstRender === \"function\")\n      this.options.beforeFirstRender();\n\n    /**\n     * Notify about PointerEvents usage\n     */\n    if (\n      this.isFirstKeyboardInstance &&\n      this.utilities.pointerEventsSupported() &&\n      !this.options.useTouchEvents &&\n      !this.options.useMouseEvents\n    ) {\n      if (this.options.debug) {\n        console.log(\"Using PointerEvents as it is supported by this browser\");\n      }\n    }\n\n    /**\n     * Notify about touch events usage\n     */\n    if (this.options.useTouchEvents) {\n      if (this.options.debug) {\n        console.log(\n          \"useTouchEvents has been enabled. Only touch events will be used.\"\n        );\n      }\n    }\n  }\n\n  /**\n   * Executes the callback function before a simple-keyboard render.\n   */\n  beforeRender() {\n    if (typeof this.options.beforeRender === \"function\")\n      this.options.beforeRender();\n  }\n\n  /**\n   * Executes the callback function every time simple-keyboard is rendered (e.g: when you change layouts).\n   */\n  onRender() {\n    if (typeof this.options.onRender === \"function\") this.options.onRender();\n  }\n\n  /**\n   * Executes the callback function once all modules have been loaded\n   */\n  onModulesLoaded() {\n    if (typeof this.options.onModulesLoaded === \"function\")\n      this.options.onModulesLoaded();\n  }\n\n  /**\n   * Register module\n   */\n  registerModule = (name, initCallback) => {\n    if (!this.modules[name]) this.modules[name] = {};\n\n    initCallback(this.modules[name]);\n  };\n\n  /**\n   * Load modules\n   */\n  loadModules() {\n    if (Array.isArray(this.options.modules)) {\n      this.options.modules.forEach(KeyboardModule => {\n        const keyboardModule = new KeyboardModule();\n\n        /* istanbul ignore next */\n        if (\n          keyboardModule.constructor.name &&\n          keyboardModule.constructor.name !== \"Function\"\n        ) {\n          const classStr = `module-${this.utilities.camelCase(\n            keyboardModule.constructor.name\n          )}`;\n          this.keyboardPluginClasses =\n            this.keyboardPluginClasses + ` ${classStr}`;\n        }\n\n        keyboardModule.init(this);\n      });\n\n      this.keyboardPluginClasses =\n        this.keyboardPluginClasses + \" modules-loaded\";\n\n      this.render();\n      this.onModulesLoaded();\n    }\n  }\n\n  /**\n   * Get module prop\n   */\n  getModuleProp(name, prop) {\n    if (!this.modules[name]) return false;\n\n    return this.modules[name][prop];\n  }\n\n  /**\n   * getModulesList\n   */\n  getModulesList() {\n    return Object.keys(this.modules);\n  }\n\n  /**\n   * Parse Row DOM containers\n   */\n  parseRowDOMContainers(\n    rowDOM,\n    rowIndex,\n    containerStartIndexes,\n    containerEndIndexes\n  ) {\n    const rowDOMArray = Array.from(rowDOM.children);\n    let removedElements = 0;\n\n    if (rowDOMArray.length) {\n      containerStartIndexes.forEach((startIndex, arrIndex) => {\n        const endIndex = containerEndIndexes[arrIndex];\n\n        /**\n         * If there exists a respective end index\n         * if end index comes after start index\n         */\n        if (!endIndex || !(endIndex > startIndex)) {\n          return false;\n        }\n\n        /**\n         * Updated startIndex, endIndex\n         * This is since the removal of buttons to place a single button container\n         * results in a modified array size\n         */\n        const updated_startIndex = startIndex - removedElements;\n        const updated_endIndex = endIndex - removedElements;\n\n        /**\n         * Create button container\n         */\n        const containerDOM = document.createElement(\"div\");\n        containerDOM.className += \"hg-button-container\";\n        const containerUID = `${this.options.layoutName}-r${rowIndex}c${arrIndex}`;\n        containerDOM.setAttribute(\"data-skUID\", containerUID);\n\n        /**\n         * Taking elements due to be inserted into container\n         */\n        const containedElements = rowDOMArray.splice(\n          updated_startIndex,\n          updated_endIndex - updated_startIndex + 1\n        );\n        removedElements = updated_endIndex - updated_startIndex;\n\n        /**\n         * Inserting elements to container\n         */\n        containedElements.forEach(element => containerDOM.appendChild(element));\n\n        /**\n         * Adding container at correct position within rowDOMArray\n         */\n        rowDOMArray.splice(updated_startIndex, 0, containerDOM);\n\n        /**\n         * Clearing old rowDOM children structure\n         */\n        rowDOM.innerHTML = \"\";\n\n        /**\n         * Appending rowDOM new children list\n         */\n        rowDOMArray.forEach(element => rowDOM.appendChild(element));\n\n        if (this.options.debug) {\n          console.log(\n            \"rowDOMContainer\",\n            containedElements,\n            updated_startIndex,\n            updated_endIndex,\n            removedElements + 1\n          );\n        }\n      });\n    }\n\n    return rowDOM;\n  }\n\n  /**\n   * getKeyboardClassString\n   */\n  getKeyboardClassString = (...baseDOMClasses) => {\n    const keyboardClasses = [this.keyboardDOMClass, ...baseDOMClasses].filter(\n      DOMClass => !!DOMClass\n    );\n\n    return keyboardClasses.join(\" \");\n  };\n\n  /**\n   * Renders rows and buttons as per options\n   */\n  render() {\n    /**\n     * Clear keyboard\n     */\n    this.clear();\n\n    /**\n     * Calling beforeFirstRender\n     */\n    if (!this.initialized) {\n      this.beforeFirstRender();\n    }\n\n    /**\n     * Calling beforeRender\n     */\n    this.beforeRender();\n\n    const layoutClass = `hg-layout-${this.options.layoutName}`;\n    const layout = this.options.layout || getDefaultLayout();\n    const useTouchEvents = this.options.useTouchEvents || false;\n    const useTouchEventsClass = useTouchEvents ? \"hg-touch-events\" : \"\";\n    const useMouseEvents = this.options.useMouseEvents || false;\n    const disableRowButtonContainers = this.options.disableRowButtonContainers;\n\n    /**\n     * Adding themeClass, layoutClass to keyboardDOM\n     */\n    this.keyboardDOM.className = this.getKeyboardClassString(\n      this.options.theme,\n      layoutClass,\n      this.keyboardPluginClasses,\n      useTouchEventsClass\n    );\n\n    /**\n     * Iterating through each row\n     */\n    layout[this.options.layoutName].forEach((row, rIndex) => {\n      const rowArray = row.split(\" \");\n\n      /**\n       * Creating empty row\n       */\n      let rowDOM = document.createElement(\"div\");\n      rowDOM.className += \"hg-row\";\n\n      /**\n       * Tracking container indicators in rows\n       */\n      const containerStartIndexes = [];\n      const containerEndIndexes = [];\n\n      /**\n       * Iterating through each button in row\n       */\n      rowArray.forEach((button, bIndex) => {\n        /**\n         * Check if button has a container indicator\n         */\n        const buttonHasContainerStart =\n          !disableRowButtonContainers &&\n          button.includes(\"[\") &&\n          button.length > 1;\n        const buttonHasContainerEnd =\n          !disableRowButtonContainers &&\n          button.includes(\"]\") &&\n          button.length > 1;\n\n        /**\n         * Save container start index, if applicable\n         */\n        if (buttonHasContainerStart) {\n          containerStartIndexes.push(bIndex);\n\n          /**\n           * Removing indicator\n           */\n          button = button.replace(/\\[/g, \"\");\n        }\n\n        if (buttonHasContainerEnd) {\n          containerEndIndexes.push(bIndex);\n\n          /**\n           * Removing indicator\n           */\n          button = button.replace(/\\]/g, \"\");\n        }\n\n        /**\n         * Processing button options\n         */\n        const fctBtnClass = this.utilities.getButtonClass(button);\n        const buttonDisplayName = this.utilities.getButtonDisplayName(\n          button,\n          this.options.display,\n          this.options.mergeDisplay\n        );\n\n        /**\n         * Creating button\n         */\n        const buttonType = this.options.useButtonTag ? \"button\" : \"div\";\n        const buttonDOM = document.createElement(buttonType);\n        buttonDOM.className += `hg-button ${fctBtnClass}`;\n\n        /**\n         * Adding buttonTheme\n         */\n        buttonDOM.classList.add(...this.getButtonThemeClasses(button));\n\n        /**\n         * Adding buttonAttributes\n         */\n        this.setDOMButtonAttributes(button, (attribute, value) => {\n          buttonDOM.setAttribute(attribute, value);\n        });\n\n        this.activeButtonClass = \"hg-activeButton\";\n\n        /**\n         * Handle button click event\n         */\n        /* istanbul ignore next */\n        if (\n          this.utilities.pointerEventsSupported() &&\n          !useTouchEvents &&\n          !useMouseEvents\n        ) {\n          /**\n           * Handle PointerEvents\n           */\n          buttonDOM.onpointerdown = e => {\n            this.handleButtonClicked(button);\n            this.handleButtonMouseDown(button, e);\n          };\n          buttonDOM.onpointerup = () => {\n            this.handleButtonMouseUp(button);\n          };\n          buttonDOM.onpointercancel = () => {\n            this.handleButtonMouseUp(button);\n          };\n        } else {\n          /**\n           * Fallback for browsers not supporting PointerEvents\n           */\n          if (useTouchEvents) {\n            /**\n             * Handle touch events\n             */\n            buttonDOM.ontouchstart = e => {\n              this.handleButtonClicked(button);\n              this.handleButtonMouseDown(button, e);\n            };\n            buttonDOM.ontouchend = () => {\n              this.handleButtonMouseUp(button);\n            };\n            buttonDOM.ontouchcancel = () => {\n              this.handleButtonMouseUp(button);\n            };\n          } else {\n            /**\n             * Handle mouse events\n             */\n            buttonDOM.onclick = () => {\n              this.isMouseHold = false;\n              this.handleButtonClicked(button);\n            };\n            buttonDOM.onmousedown = e => {\n              this.handleButtonMouseDown(button, e);\n            };\n            buttonDOM.onmouseup = () => {\n              this.handleButtonMouseUp(button);\n            };\n          }\n        }\n\n        /**\n         * Adding identifier\n         */\n        buttonDOM.setAttribute(\"data-skBtn\", button);\n\n        /**\n         * Adding unique id\n         * Since there's no limit on spawning same buttons, the unique id ensures you can style every button\n         */\n        const buttonUID = `${this.options.layoutName}-r${rIndex}b${bIndex}`;\n        buttonDOM.setAttribute(\"data-skBtnUID\", buttonUID);\n\n        /**\n         * Adding button label to button\n         */\n        const buttonSpanDOM = document.createElement(\"span\");\n        buttonSpanDOM.innerHTML = buttonDisplayName;\n        buttonDOM.appendChild(buttonSpanDOM);\n\n        /**\n         * Adding to buttonElements\n         */\n        if (!this.buttonElements[button]) this.buttonElements[button] = [];\n\n        this.buttonElements[button].push(buttonDOM);\n\n        /**\n         * Appending button to row\n         */\n        rowDOM.appendChild(buttonDOM);\n      });\n\n      /**\n       * Parse containers in row\n       */\n      rowDOM = this.parseRowDOMContainers(\n        rowDOM,\n        rIndex,\n        containerStartIndexes,\n        containerEndIndexes\n      );\n\n      /**\n       * Appending row to keyboard\n       */\n      this.keyboardDOM.appendChild(rowDOM);\n    });\n\n    /**\n     * Calling onRender\n     */\n    this.onRender();\n\n    if (!this.initialized) {\n      /**\n       * Ensures that onInit and beforeFirstRender are only called once per instantiation\n       */\n      this.initialized = true;\n\n      /**\n       * Handling parent events\n       */\n      /* istanbul ignore next */\n      if (\n        this.utilities.pointerEventsSupported() &&\n        !useTouchEvents &&\n        !useMouseEvents\n      ) {\n        document.onpointerup = () => this.handleButtonMouseUp();\n        this.keyboardDOM.onpointerdown = e =>\n          this.handleKeyboardContainerMouseDown(e);\n      } else if (useTouchEvents) {\n        /**\n         * Handling ontouchend, ontouchcancel\n         */\n        document.ontouchend = () => this.handleButtonMouseUp();\n        document.ontouchcancel = () => this.handleButtonMouseUp();\n\n        this.keyboardDOM.ontouchstart = e =>\n          this.handleKeyboardContainerMouseDown(e);\n      } else if (!useTouchEvents) {\n        /**\n         * Handling mouseup\n         */\n        document.onmouseup = () => this.handleButtonMouseUp();\n        this.keyboardDOM.onmousedown = e =>\n          this.handleKeyboardContainerMouseDown(e);\n      }\n\n      /**\n       * Calling onInit\n       */\n      this.onInit();\n    }\n  }\n}\n\nexport default SimpleKeyboard;\n","export const getDefaultLayout = () => {\n  return {\n    default: [\n      \"` 1 2 3 4 5 6 7 8 9 0 - = {bksp}\",\n      \"{tab} q w e r t y u i o p [ ] \\\\\",\n      \"{lock} a s d f g h j k l ; ' {enter}\",\n      \"{shift} z x c v b n m , . / {shift}\",\n      \".com @ {space}\"\n    ],\n    shift: [\n      \"~ ! @ # $ % ^ & * ( ) _ + {bksp}\",\n      \"{tab} Q W E R T Y U I O P { } |\",\n      '{lock} A S D F G H J K L : \" {enter}',\n      \"{shift} Z X C V B N M < > ? {shift}\",\n      \".com @ {space}\"\n    ]\n  };\n};\n","import SimpleKeyboard from \"./components/Keyboard\";\nexport default SimpleKeyboard;\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}